<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    xmlns:tail="clr-namespace:TailBlazer.Views.Tail"                    xmlns:controls="clr-namespace:TailBlazer.Controls"                    xmlns:infrastucture="clr-namespace:TailBlazer.Infrastucture"                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"                    xmlns:virtualisation="clr-namespace:TailBlazer.Infrastucture.Virtualisation"                    xmlns:system="clr-namespace:System;assembly=mscorlib">    <ResourceDictionary.MergedDictionaries>        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.listbox.xaml" />        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/materialdesigntheme.font.xaml" />    </ResourceDictionary.MergedDictionaries>        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>    <infrastucture:InvertedBooleanToVisibilityConverter x:Key="InvertedBooleanToVisibilityConverter"/>        <DataTemplate DataType="{x:Type tail:LineProxy}">        <Grid Margin="2 0 0 0">            <Grid.ColumnDefinitions>                <ColumnDefinition Width="16"/>                <ColumnDefinition Width="*"/>            </Grid.ColumnDefinitions>            <materialDesign:PopupBox                         PlacementMode="RightAndAlignTopEdges"                        PopupMode="MouseOver"                        FontFamily="{StaticResource MaterialDesignFont}"                        Visibility="{Binding ShowIndicator.Value}">                <materialDesign:PopupBox.ToggleContent>                    <!-- Foreground= -->                    <materialDesign:PackIcon                            Width="14"                            Height="14"                            Foreground ="{Binding IndicatorColour.Value}"                            Kind="{Binding IndicatorIcon.Value,FallbackValue={x:Static materialDesign:PackIconKind.Information}}"/>                </materialDesign:PopupBox.ToggleContent>                <Grid Margin="8"    TextOptions.TextFormattingMode="Ideal"                                     TextOptions.TextRenderingMode="Auto"   >                    <Grid.RowDefinitions>                        <RowDefinition Height="Auto"/>                        <RowDefinition Height="*"/>                    </Grid.RowDefinitions>                    <TextBlock                             FontSize="14"                            FontWeight="DemiBold"                            Text="This line is highlighted because:"/>                    <ItemsControl                                 Margin="0 8 0 0"                                Grid.Row="1"                                 ItemsSource="{Binding IndicatorMatches.Value}">                        <ItemsControl.ItemTemplate>                            <DataTemplate DataType="{x:Type tail:LineMatchProxy}">                                <Grid Margin="6">                                    <Grid.ColumnDefinitions>                                        <ColumnDefinition Width="22"/>                                        <ColumnDefinition MinWidth="75"/>                                    </Grid.ColumnDefinitions>                                    <materialDesign:PackIcon Width="14" Height="14"                                                        Foreground="{Binding Background.Value}"                                                         Padding="4"                                                       VerticalAlignment="Center"                                                      Kind="{Binding IconKind}"/>                                    <StackPanel  Grid.Column="1"                                                 Margin="4 0 0 0"                                                 VerticalAlignment="Center"                                                 Orientation="Horizontal">                                        <TextBlock  FontSize="12"                                                  Text="It matches"                                                     VerticalAlignment="Center"/>                                        <TextBlock                                                  Margin="4 0 0 0"                                                FontSize="12"                                                Text="{Binding Text}"                                                  Foreground="{Binding Foreground.Value}"                                                Background="{Binding Background.Value}"                                                VerticalAlignment="Center"/>                                    </StackPanel>                                </Grid>                            </DataTemplate>                        </ItemsControl.ItemTemplate>                    </ItemsControl>                </Grid>            </materialDesign:PopupBox>            <Grid Grid.Column="1" Margin="4 0 0 0">                <controls:HighlightTextControl                                             Text="{Binding PlainText.Value}"                     VerticalAlignment="Center"                    HighlightForegroundBrush="{DynamicResource SecondaryAccentForegroundBrush}"                    HighlightBackgroundBrush="{DynamicResource SecondaryAccentBrush}"                    FormattedText = "{Binding FormattedText.Value}"/>                <!--TODO: Move the underline to the fading text effect -->                                <!--<materialDesign:Underline x:Name="Underline"                           Grid.ColumnSpan="2"                           IsActive="{Binding IsRecent}"                           Height="1"                           Background="{DynamicResource SecondaryAccentBrush}"                           Visibility="Visible" />-->            </Grid>        </Grid>    </DataTemplate>    <Style x:Key="BaseLinesItemContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">        <Style.Setters>            <Setter Property="Padding" Value="0"/>            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>            <Setter Property="Height" Value="22"/>        </Style.Setters>        <Style.Triggers>            <DataTrigger Binding="{Binding IsRecent}" Value="{x:Static system:Boolean.TrueString}">                <Setter Property="Background" Value="{DynamicResource SecondaryAccentBrush}"/>                <Setter Property="Foreground"  Value="{DynamicResource SecondaryAccentForegroundBrush}"/>            </DataTrigger>        </Style.Triggers>    </Style>        <Style x:Key="LinesItemContainerStyle" TargetType="{x:Type ListBoxItem}" BasedOn="{StaticResource  MaterialDesignListBoxItem}">        <Style.Setters>            <Setter Property="Padding" Value="0"/>            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>            <Setter Property="Height" Value="22"/>            <Setter Property="controls:ListboxItemHighlightAssist.BaseStyle" Value="{StaticResource BaseLinesItemContainerStyle}"/>            <Setter Property="controls:ListboxItemHighlightAssist.IsEnabled" Value="{Binding Path=DataContext.HighlightTail.Value, ElementName=Control}"/>            <Setter Property="controls:ListboxItemHighlightAssist.IsRecent" Value="{Binding Path=IsRecent}"/>            <Setter Property="controls:ListboxItemHighlightAssist.HighlightForegroundBrush" Value="{DynamicResource SecondaryAccentForegroundBrush}"/>            <Setter Property="controls:ListboxItemHighlightAssist.HighlightBackgroundBrush" Value="{DynamicResource SecondaryAccentBrush}"/>        </Style.Setters>    </Style>    <Style x:Key="LinesListBoxStyle" TargetType="{x:Type ListBox}">        <Setter Property="IsTextSearchEnabled" Value="False" />        <!--<Setter Property="FocusVisualStyle" Value="{x:Null}" />-->        <Setter Property="Background" Value="Transparent"/>        <Setter Property="BorderBrush" Value="Transparent"/>        <Setter Property="BorderThickness" Value="0"/>        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>        <Setter Property="VerticalContentAlignment" Value="Center"/>        <Setter Property="FontFamily" Value="Consolas"/>        <Setter Property="SelectionMode" Value="Extended"/>        <Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle"/>        <Setter Property="ItemContainerStyle" Value="{StaticResource LinesItemContainerStyle}"/>        <Setter Property="Template">            <Setter.Value>                <ControlTemplate TargetType="{x:Type ListBox}">                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">                        <ScrollViewer Focusable="false"                                       Padding="{TemplateBinding Padding}"                                      IsTabStop="True">                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>                        </ScrollViewer>                    </Border>                    <ControlTemplate.Triggers>                        <MultiTrigger>                            <MultiTrigger.Conditions>                                <Condition Property="IsGrouping" Value="true"/>                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>                            </MultiTrigger.Conditions>                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>                        </MultiTrigger>                    </ControlTemplate.Triggers>                </ControlTemplate>            </Setter.Value>        </Setter>    </Style>    <DataTemplate x:Key="LinesDataTemplate" DataType="{x:Type tail:ILinesVisualisation}">        <ListBox ItemsSource="{Binding Lines}"                  MinHeight="50"                  Style="{StaticResource LinesListBoxStyle}"                 infrastucture:ListBoxHelper.SelectionMonitor="{Binding SelectionMonitor}" >            <ListBox.ItemsPanel>                <ItemsPanelTemplate>                    <virtualisation:LinesScrollPanel ItemHeight="22"                                                ScrollReceiver="{Binding}"                                                  StartIndex="{Binding FirstIndex}"                                                TotalItems="{Binding Count.Value}"                                                CharacterWidth ="6.59666666666667"                                                HorizontalScrollChanged="{Binding HorizonalScrollChanged}"                                                       TotalCharacters="{Binding MaximumChars.Value, UpdateSourceTrigger=PropertyChanged}"/>                </ItemsPanelTemplate>            </ListBox.ItemsPanel>            <ListBox.InputBindings>                <KeyBinding Key="C" Modifiers="Control" Command="{Binding CopyToClipboardCommand}"/>            </ListBox.InputBindings>            <ListBox.ContextMenu>                <ContextMenu>                    <MenuItem Header="_Copy" Command="{Binding CopyToClipboardCommand}">                        <MenuItem.Icon>                            <Viewbox Width="16" Height="16">                                <Canvas Width="24" Height="24">                                    <Path Data="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"                                               Fill="{DynamicResource MaterialDesignBody}" />                                </Canvas>                            </Viewbox>                        </MenuItem.Icon>                    </MenuItem>                </ContextMenu>            </ListBox.ContextMenu>        </ListBox>    </DataTemplate></ResourceDictionary>